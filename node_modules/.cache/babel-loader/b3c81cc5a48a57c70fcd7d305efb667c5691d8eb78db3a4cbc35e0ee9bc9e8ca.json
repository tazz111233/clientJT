{"ast":null,"code":"import{useState}from\"react\";import{useNavigate}from\"react-router-dom\";// Import useNavigate\nimport\"../styles/ForPass.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SecurityQuestionChecker=()=>{const[username,setUsername]=useState(\"\");const[question,setQuestion]=useState(null);const[answer,setAnswer]=useState(\"\");const[correctAnswer,setCorrectAnswer]=useState(\"\");// Store the correct answer in state\nconst[newPassword,setNewPassword]=useState(\"\");// Store new password input\nconst[loading,setLoading]=useState(false);const[error,setError]=useState(\"\");const[verificationResult,setVerificationResult]=useState(null);const[passwordUpdated,setPasswordUpdated]=useState(false);// Track password change status\nconst navigate=useNavigate();// Initialize navigate\nconst fetchSecurityQuestion=async()=>{setLoading(true);setError(\"\");setQuestion(null);setVerificationResult(null);setAnswer(\"\");try{const response=await fetch(\"https://backendjt-1.onrender.com/get-question-answer/\".concat(username));const result=await response.json();if(!response.ok){throw new Error(result.error||\"Failed to fetch data\");}setQuestion(result.question);setCorrectAnswer(result.answer);// Store correct answer in state\n}catch(err){setError(err.message);}finally{setLoading(false);}};const checkAnswer=()=>{if(answer.trim().toLowerCase()===correctAnswer.toLowerCase()){setVerificationResult(\"Correct answer!\");}else{setVerificationResult(\"Incorrect answer. Try again.\");}};const changePassword=async()=>{if(!newPassword){setError(\"Please enter a new password.\");return;}try{const response=await fetch(\"https://backendjt-1.onrender.com/change-password\",{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({username,newPassword})});const result=await response.json();if(response.ok){setPasswordUpdated(true);navigate(\"/\");// Redirect to login page after password update\n}else{setError(result.message||\"Failed to change password.\");}}catch(err){setError(err.message);}};return/*#__PURE__*/_jsx(\"div\",{className:\"wow\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container2\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Verify Security Question\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter username\",value:username,onChange:e=>setUsername(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchSecurityQuestion,disabled:!username||loading,children:loading?\"Fetching...\":\"Get Security Question\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),question&&!passwordUpdated&&/*#__PURE__*/_jsxs(\"div\",{className:\"question-section\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Question:\"}),\" \",question]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter your answer\",value:answer,onChange:e=>setAnswer(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:checkAnswer,disabled:!answer,children:\"Submit Answer\"}),verificationResult&&/*#__PURE__*/_jsx(\"p\",{className:\"result\",children:verificationResult})]}),verificationResult===\"Correct answer!\"&&!passwordUpdated&&/*#__PURE__*/_jsxs(\"div\",{className:\"new-password-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Enter New Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"New password\",value:newPassword,onChange:e=>setNewPassword(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:changePassword,disabled:!newPassword,children:\"Change Password\"})]}),passwordUpdated&&/*#__PURE__*/_jsx(\"p\",{className:\"success\",children:\"Password updated successfully!\"})]})});};export default SecurityQuestionChecker;","map":{"version":3,"names":["useState","useNavigate","jsx","_jsx","jsxs","_jsxs","SecurityQuestionChecker","username","setUsername","question","setQuestion","answer","setAnswer","correctAnswer","setCorrectAnswer","newPassword","setNewPassword","loading","setLoading","error","setError","verificationResult","setVerificationResult","passwordUpdated","setPasswordUpdated","navigate","fetchSecurityQuestion","response","fetch","concat","result","json","ok","Error","err","message","checkAnswer","trim","toLowerCase","changePassword","method","headers","body","JSON","stringify","className","children","type","placeholder","value","onChange","e","target","onClick","disabled"],"sources":["/Users/tasneemmahmud/Desktop/Full Stack Ecommerce Web Application with Admin Panel /client/src/pages/ForPasss.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\nimport \"../styles/ForPass.css\";\n\nconst SecurityQuestionChecker = () => {\n  const [username, setUsername] = useState(\"\");\n  const [question, setQuestion] = useState(null);\n  const [answer, setAnswer] = useState(\"\");\n  const [correctAnswer, setCorrectAnswer] = useState(\"\"); // Store the correct answer in state\n  const [newPassword, setNewPassword] = useState(\"\"); // Store new password input\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [verificationResult, setVerificationResult] = useState(null);\n  const [passwordUpdated, setPasswordUpdated] = useState(false); // Track password change status\n\n  const navigate = useNavigate(); // Initialize navigate\n\n  const fetchSecurityQuestion = async () => {\n    setLoading(true);\n    setError(\"\");\n    setQuestion(null);\n    setVerificationResult(null);\n    setAnswer(\"\");\n    \n    try {\n      const response = await fetch(`https://backendjt-1.onrender.com/get-question-answer/${username}`);\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || \"Failed to fetch data\");\n      }\n\n      setQuestion(result.question);\n      setCorrectAnswer(result.answer); // Store correct answer in state\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const checkAnswer = () => {\n    if (answer.trim().toLowerCase() === correctAnswer.toLowerCase()) {\n      setVerificationResult(\"Correct answer!\");\n    } else {\n      setVerificationResult(\"Incorrect answer. Try again.\");\n    }\n  };\n\n  const changePassword = async () => {\n    if (!newPassword) {\n      setError(\"Please enter a new password.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\"https://backendjt-1.onrender.com/change-password\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username,\n          newPassword,\n        }),\n      });\n\n      const result = await response.json();\n\n      if (response.ok) {\n        setPasswordUpdated(true);\n        navigate(\"/\"); // Redirect to login page after password update\n      } else {\n        setError(result.message || \"Failed to change password.\");\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div className=\"wow\">\n    <div className=\"container2\">\n      <h2>Verify Security Question</h2>\n      \n      <input\n        type=\"text\"\n        placeholder=\"Enter username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      \n      <button onClick={fetchSecurityQuestion} disabled={!username || loading}>\n        {loading ? \"Fetching...\" : \"Get Security Question\"}\n      </button>\n\n      {error && <p className=\"error\">{error}</p>}\n      \n      {question && !passwordUpdated && (\n        <div className=\"question-section\">\n          <p><strong>Question:</strong> {question}</p>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your answer\"\n            value={answer}\n            onChange={(e) => setAnswer(e.target.value)}\n          />\n          <button onClick={checkAnswer} disabled={!answer}>\n            Submit Answer\n          </button>\n          {verificationResult && <p className=\"result\">{verificationResult}</p>}\n        </div>\n      )}\n\n      {verificationResult === \"Correct answer!\" && !passwordUpdated && (\n        <div className=\"new-password-section\">\n          <h3>Enter New Password</h3>\n          <input\n            type=\"password\"\n            placeholder=\"New password\"\n            value={newPassword}\n            onChange={(e) => setNewPassword(e.target.value)}\n          />\n          <button onClick={changePassword} disabled={!newPassword}>\n            Change Password\n          </button>\n        </div>\n      )}\n\n      {passwordUpdated && <p className=\"success\">Password updated successfully!</p>}\n    </div>\n    </div>\n  );\n};\n\nexport default SecurityQuestionChecker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}