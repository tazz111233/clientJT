{"ast":null,"code":"var _jsxFileName = \"/Users/tasneemmahmud/Desktop/Full Stack Ecommerce Web Application with Admin Panel /client/src/pages/AddPro.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddPro = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [category, setCategory] = useState('');\n  const [stock, setStock] = useState(''); // State for new product stock\n  const [image, setImage] = useState(null);\n  const [products, setProducts] = useState([]); // State to store existing products\n\n  // Fetch existing products on component mount\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/getAllProducts');\n        setProducts(response.data);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    };\n    fetchProducts(); // Call the function on component mount\n  }, []);\n\n  // Handle adding a new product\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('price', price);\n    formData.append('image', image);\n    formData.append('category', category);\n    formData.append('stock', stock); // Ensure stock is sent as a string\n\n    try {\n      const response = await axios.post('http://localhost:5001/products', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('Product added successfully!');\n      // Reset form fields after successful submission\n      setName('');\n      setPrice('');\n      setCategory('');\n      setStock('');\n      setImage(null);\n      // Fetch updated product list\n      await fetchProducts();\n    } catch (error) {\n      console.error('Error adding product:', error);\n      alert('Failed to add product');\n    }\n  };\n\n  // Handle stock input changes\n  const handleStockChange = e => {\n    const value = e.target.value;\n    // Ensure the value is a valid number or empty string\n    if (value === '' || /^\\d+$/.test(value)) {\n      setStock(value);\n    }\n  };\n\n  // Update stock for an existing product\n  const updateStock = async (productId, newStock) => {\n    try {\n      await axios.patch(`http://localhost:5001/products/${productId}`, {\n        stock: newStock\n      });\n      alert('Stock updated successfully!');\n      // Fetch updated product list\n      await fetchProducts();\n    } catch (error) {\n      console.error('Error updating stock:', error);\n      alert('Failed to update stock');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add New Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: price,\n          onChange: e => setPrice(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Stock:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\" // Keep as text for easier validation\n          ,\n          value: stock,\n          onChange: handleStockChange // Use the custom change handler\n          ,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setImage(e.target.files[0]),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Existing Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [product.name, \" - Stock: \", product.stock, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          defaultValue: product.stock,\n          onChange: e => updateStock(product.id, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(AddPro, \"ryH7nwAZdN8HNFzwpLk1X6hGS2g=\");\n_c = AddPro;\nexport default AddPro;\nvar _c;\n$RefreshReg$(_c, \"AddPro\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AddPro","_s","name","setName","price","setPrice","category","setCategory","stock","setStock","image","setImage","products","setProducts","fetchProducts","response","get","data","error","console","handleSubmit","e","preventDefault","formData","FormData","append","post","headers","alert","handleStockChange","value","target","test","updateStock","productId","newStock","patch","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","files","map","product","defaultValue","id","_c","$RefreshReg$"],"sources":["/Users/tasneemmahmud/Desktop/Full Stack Ecommerce Web Application with Admin Panel /client/src/pages/AddPro.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AddPro = () => {\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [category, setCategory] = useState('');\n  const [stock, setStock] = useState(''); // State for new product stock\n  const [image, setImage] = useState(null);\n  const [products, setProducts] = useState([]); // State to store existing products\n\n  // Fetch existing products on component mount\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/getAllProducts');\n        setProducts(response.data);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    };\n\n    fetchProducts(); // Call the function on component mount\n  }, []);\n\n  // Handle adding a new product\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('price', price);\n    formData.append('image', image);\n    formData.append('category', category);\n    formData.append('stock', stock); // Ensure stock is sent as a string\n\n    try {\n      const response = await axios.post('http://localhost:5001/products', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n      alert('Product added successfully!');\n      // Reset form fields after successful submission\n      setName('');\n      setPrice('');\n      setCategory('');\n      setStock('');\n      setImage(null);\n      // Fetch updated product list\n      await fetchProducts();\n    } catch (error) {\n      console.error('Error adding product:', error);\n      alert('Failed to add product');\n    }\n  };\n\n  // Handle stock input changes\n  const handleStockChange = (e) => {\n    const value = e.target.value;\n    // Ensure the value is a valid number or empty string\n    if (value === '' || /^\\d+$/.test(value)) {\n      setStock(value);\n    }\n  };\n\n  // Update stock for an existing product\n  const updateStock = async (productId, newStock) => {\n    try {\n      await axios.patch(`http://localhost:5001/products/${productId}`, { stock: newStock });\n      alert('Stock updated successfully!');\n      // Fetch updated product list\n      await fetchProducts();\n    } catch (error) {\n      console.error('Error updating stock:', error);\n      alert('Failed to update stock');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Add New Product</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Name:</label>\n          <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} required />\n        </div>\n        <div>\n          <label>Price:</label>\n          <input type=\"number\" value={price} onChange={(e) => setPrice(e.target.value)} required />\n        </div>\n        <div>\n          <label>Category:</label>\n          <input type=\"text\" value={category} onChange={(e) => setCategory(e.target.value)} required />\n        </div>\n        <div>\n          <label>Stock:</label>\n          <input\n            type=\"text\" // Keep as text for easier validation\n            value={stock}\n            onChange={handleStockChange} // Use the custom change handler\n            required\n          />\n        </div>\n        <div>\n          <label>Image:</label>\n          <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} required />\n        </div>\n        <button type=\"submit\">Add Product</button>\n      </form>\n\n      {/* Existing Products List */}\n      <h2>Existing Products</h2>\n      <ul>\n        {products.map(product => (\n          <li key={product.id}>\n            {product.name} - Stock: {product.stock}\n            <input\n              type=\"number\"\n              defaultValue={product.stock}\n              onChange={(e) => updateStock(product.id, e.target.value)}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default AddPro;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}