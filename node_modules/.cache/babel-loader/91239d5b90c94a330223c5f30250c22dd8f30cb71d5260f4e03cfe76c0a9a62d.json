{"ast":null,"code":"var _jsxFileName = \"/Users/tasneemmahmud/Desktop/Full Stack Ecommerce Web Application with Admin Panel /client/src/pages/ForPasss.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SecurityQuestionChecker = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [question, setQuestion] = useState(null);\n  const [answer, setAnswer] = useState(\"\");\n  const [correctAnswer, setCorrectAnswer] = useState(\"\"); // Store the correct answer in state\n  const [newPassword, setNewPassword] = useState(\"\"); // Store new password input\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [verificationResult, setVerificationResult] = useState(null);\n  const [passwordUpdated, setPasswordUpdated] = useState(false); // Track password change status\n\n  const fetchSecurityQuestion = async () => {\n    setLoading(true);\n    setError(\"\");\n    setQuestion(null);\n    setVerificationResult(null);\n    setAnswer(\"\");\n    try {\n      const response = await fetch(`http://localhost:5001/get-question-answer/${username}`);\n      const result = await response.json();\n      if (!response.ok) {\n        throw new Error(result.error || \"Failed to fetch data\");\n      }\n      setQuestion(result.question);\n      setCorrectAnswer(result.answer); // Store correct answer in state\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const checkAnswer = () => {\n    if (answer.trim().toLowerCase() === correctAnswer.toLowerCase()) {\n      setVerificationResult(\"Correct answer!\");\n    } else {\n      setVerificationResult(\"Incorrect answer. Try again.\");\n    }\n  };\n  const changePassword = async () => {\n    if (!newPassword) {\n      setError(\"Please enter a new password.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5001/change-password\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          newPassword\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setPasswordUpdated(true);\n      } else {\n        setError(result.message || \"Failed to change password.\");\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Verify Security Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchSecurityQuestion,\n      disabled: !username || loading,\n      children: loading ? \"Fetching...\" : \"Get Security Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this), question && !passwordUpdated && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Question:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 14\n        }, this), \" \", question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your answer\",\n        value: answer,\n        onChange: e => setAnswer(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkAnswer,\n        disabled: !answer,\n        children: \"Submit Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), verificationResult && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"result\",\n        children: verificationResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), verificationResult === \"Correct answer!\" && !passwordUpdated && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-password-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Enter New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"New password\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changePassword,\n        disabled: !newPassword,\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), passwordUpdated && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success\",\n      children: \"Password updated successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(SecurityQuestionChecker, \"zSiV6xMB8gSSZQBO9VJw6MF1s48=\");\n_c = SecurityQuestionChecker;\nexport default SecurityQuestionChecker;\nvar _c;\n$RefreshReg$(_c, \"SecurityQuestionChecker\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SecurityQuestionChecker","_s","username","setUsername","question","setQuestion","answer","setAnswer","correctAnswer","setCorrectAnswer","newPassword","setNewPassword","loading","setLoading","error","setError","verificationResult","setVerificationResult","passwordUpdated","setPasswordUpdated","fetchSecurityQuestion","response","fetch","result","json","ok","Error","err","message","checkAnswer","trim","toLowerCase","changePassword","method","headers","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/tasneemmahmud/Desktop/Full Stack Ecommerce Web Application with Admin Panel /client/src/pages/ForPasss.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst SecurityQuestionChecker = () => {\n  const [username, setUsername] = useState(\"\");\n  const [question, setQuestion] = useState(null);\n  const [answer, setAnswer] = useState(\"\");\n  const [correctAnswer, setCorrectAnswer] = useState(\"\"); // Store the correct answer in state\n  const [newPassword, setNewPassword] = useState(\"\"); // Store new password input\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [verificationResult, setVerificationResult] = useState(null);\n  const [passwordUpdated, setPasswordUpdated] = useState(false); // Track password change status\n\n  const fetchSecurityQuestion = async () => {\n    setLoading(true);\n    setError(\"\");\n    setQuestion(null);\n    setVerificationResult(null);\n    setAnswer(\"\");\n    \n    try {\n      const response = await fetch(`http://localhost:5001/get-question-answer/${username}`);\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || \"Failed to fetch data\");\n      }\n\n      setQuestion(result.question);\n      setCorrectAnswer(result.answer); // Store correct answer in state\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const checkAnswer = () => {\n    if (answer.trim().toLowerCase() === correctAnswer.toLowerCase()) {\n      setVerificationResult(\"Correct answer!\");\n    } else {\n      setVerificationResult(\"Incorrect answer. Try again.\");\n    }\n  };\n\n  const changePassword = async () => {\n    if (!newPassword) {\n      setError(\"Please enter a new password.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\"http://localhost:5001/change-password\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username,\n          newPassword,\n        }),\n      });\n\n      const result = await response.json();\n\n      if (response.ok) {\n        setPasswordUpdated(true);\n      } else {\n        setError(result.message || \"Failed to change password.\");\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Verify Security Question</h2>\n      \n      <input\n        type=\"text\"\n        placeholder=\"Enter username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      \n      <button onClick={fetchSecurityQuestion} disabled={!username || loading}>\n        {loading ? \"Fetching...\" : \"Get Security Question\"}\n      </button>\n\n      {error && <p className=\"error\">{error}</p>}\n      \n      {question && !passwordUpdated && (\n        <div className=\"question-section\">\n          <p><strong>Question:</strong> {question}</p>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your answer\"\n            value={answer}\n            onChange={(e) => setAnswer(e.target.value)}\n          />\n          <button onClick={checkAnswer} disabled={!answer}>\n            Submit Answer\n          </button>\n          {verificationResult && <p className=\"result\">{verificationResult}</p>}\n        </div>\n      )}\n\n      {verificationResult === \"Correct answer!\" && !passwordUpdated && (\n        <div className=\"new-password-section\">\n          <h3>Enter New Password</h3>\n          <input\n            type=\"password\"\n            placeholder=\"New password\"\n            value={newPassword}\n            onChange={(e) => setNewPassword(e.target.value)}\n          />\n          <button onClick={changePassword} disabled={!newPassword}>\n            Change Password\n          </button>\n        </div>\n      )}\n\n      {passwordUpdated && <p className=\"success\">Password updated successfully!</p>}\n    </div>\n  );\n};\n\nexport default SecurityQuestionChecker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}