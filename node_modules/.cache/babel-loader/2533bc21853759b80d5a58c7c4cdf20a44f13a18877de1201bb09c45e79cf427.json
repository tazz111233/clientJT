{"ast":null,"code":"var _jsxFileName = \"/Users/tasneemmahmud/Desktop/Jaanutuni/client/src/pages/Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport '../styles/Admin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Fetch items when the component mounts\n  useEffect(() => {\n    fetch(\"http://localhost:5001/items\").then(response => response.json()).then(data => {\n      setItems(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching items:\", error);\n      setLoading(false);\n    });\n  }, []);\n\n  // Function to update the status of an order\n  const updateStatus = (username, id, newStatus) => {\n    fetch(`http://localhost:5001/update-status/${username}/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        status: newStatus\n      })\n    }).then(response => response.json()).then(updatedItem => {\n      // Update the items array in state with the new status\n      setItems(prevItems => prevItems.map(item => item._id === updatedItem._id ? updatedItem : item));\n    }).catch(error => {\n      console.error(\"Error updating status:\", error);\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Update Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: items.map(item => {\n          const username = Object.keys(item).find(key => key !== \"_id\" && key !== \"order\" && key !== \"status\");\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.order\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item[username] ? item[username].map((subItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Item:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 27\n                }, this), \" \", subItem.name, \" | \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Price:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 67\n                }, this), \" $\", subItem.price]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 25\n              }, this)) : \"No items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `activ ${item.status === \"Active\" ? \"active-bg\" : item.status === \"Complete\" ? \"complete-bg\" : \"\"}`,\n                children: item.status || \"No status provided\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"active\",\n                onClick: () => updateStatus(username, item._id, \"Active\"),\n                children: \"Set Active\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"activ\",\n                onClick: () => updateStatus(username, item._id, \"Complete\"),\n                children: \"Done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)]\n          }, item._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"X0A+44AtCQpjgFsTFhgdow3TGVs=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AdminPage","_s","items","setItems","loading","setLoading","fetch","then","response","json","data","catch","error","console","updateStatus","username","id","newStatus","method","headers","body","JSON","stringify","status","updatedItem","prevItems","map","item","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","border","Object","keys","find","key","order","subItem","index","name","price","className","onClick","_c","$RefreshReg$"],"sources":["/Users/tasneemmahmud/Desktop/Jaanutuni/client/src/pages/Admin.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport '../styles/Admin.css';\n\nconst AdminPage = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Fetch items when the component mounts\n  useEffect(() => {\n    fetch(\"http://localhost:5001/items\")\n      .then((response) => response.json())\n      .then((data) => {\n        setItems(data);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching items:\", error);\n        setLoading(false);\n      });\n  }, []);\n\n  // Function to update the status of an order\n  const updateStatus = (username, id, newStatus) => {\n    fetch(`http://localhost:5001/update-status/${username}/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ status: newStatus }),\n    })\n      .then((response) => response.json())\n      .then((updatedItem) => {\n        // Update the items array in state with the new status\n        setItems((prevItems) =>\n          prevItems.map((item) =>\n            item._id === updatedItem._id ? updatedItem : item\n          )\n        );\n      })\n      .catch((error) => {\n        console.error(\"Error updating status:\", error);\n      });\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h1>Admin Page</h1>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Order</th>\n            <th>Username</th>\n            <th>Items</th>\n            <th>Status</th>\n            <th>Update Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((item) => {\n            const username = Object.keys(item).find(\n              (key) => key !== \"_id\" && key !== \"order\" && key !== \"status\"\n            );\n\n            return (\n              <tr key={item._id}>\n                <td>{item.order}</td>\n                <td>{username}</td>\n                <td>\n                  {item[username]\n                    ? item[username].map((subItem, index) => (\n                        <div key={index}>\n                          <strong>Item:</strong> {subItem.name} | <strong>Price:</strong> ${subItem.price}\n                        </div>\n                      ))\n                    : \"No items\"}\n                </td>\n                <td>\n                  <span\n                    className={`activ ${item.status === \"Active\" ? \"active-bg\" : item.status === \"Complete\" ? \"complete-bg\" : \"\"}`}\n                  >\n                    {item.status || \"No status provided\"}\n                  </span>\n                </td>\n                <td>\n                  {/* Buttons to update the order status */}\n                  <button className=\"active\" onClick={() => updateStatus(username, item._id, \"Active\")}>\n                    Set Active\n                  </button>\n                  <button className=\"activ\" onClick={() => updateStatus(username, item._id, \"Complete\")}>\n                    Done\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default AdminPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}