{"ast":null,"code":"var _jsxFileName = \"/Users/tasneemmahmud/Desktop/tristan-style/src/components/Cart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport '../styles/Cart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cart() {\n  _s();\n  const [cartItems, setCartItems] = useState(() => {\n    // Retrieve cart items from localStorage if available\n    const savedCart = localStorage.getItem('cart');\n    return savedCart ? JSON.parse(savedCart) : [];\n  });\n  const location = useLocation();\n  useEffect(() => {\n    var _location$state;\n    const newItem = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.item;\n    if (newItem) {\n      setCartItems(prevItems => {\n        // Check if the item already exists in the cart\n        const isItemAlreadyInCart = prevItems.some(item => item.name === newItem.name && item.price === newItem.price);\n        if (!isItemAlreadyInCart) {\n          const updatedCart = [...prevItems, newItem];\n          // Save the updated cart to localStorage\n          localStorage.setItem('cart', JSON.stringify(updatedCart));\n          return updatedCart;\n        }\n        return prevItems;\n      });\n    }\n  }, [location.state]);\n  const removeItemFromCart = index => {\n    setCartItems(prevItems => {\n      const updatedCart = prevItems.filter((_, i) => i !== index);\n      // Update localStorage with the new cart state\n      localStorage.setItem('cart', JSON.stringify(updatedCart));\n      return updatedCart;\n    });\n  };\n\n  // Ensure that price is a number and calculate the total price\n  const totalPrice = cartItems.reduce((total, item) => {\n    // Ensure the price is a number, default to 0 if invalid\n    const p = parseFloat(item.price);\n    console.log(p);\n    if (!isNaN(price)) {\n      return total + price; // Add the price to the total if valid\n    }\n    return total; // If invalid, skip the item\n  }, 0);\n  console.log(\"Cart Items:\", cartItems); // Debugging cart items\n  console.log(\"Total Price:\", totalPrice); // Debugging total price\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Shopping Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cartItems.length > 0 ? cartItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, \" - \", item.price, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeItemFromCart(index),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your cart is empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), cartItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"total\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total: $\", totalPrice.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Cart, \"gQ7G010kyYSLRxKQh9wgWlRvs8I=\", false, function () {\n  return [useLocation];\n});\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxDEV","_jsxDEV","Cart","_s","cartItems","setCartItems","savedCart","localStorage","getItem","JSON","parse","location","_location$state","newItem","state","item","prevItems","isItemAlreadyInCart","some","name","price","updatedCart","setItem","stringify","removeItemFromCart","index","filter","_","i","totalPrice","reduce","total","p","parseFloat","console","log","isNaN","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","toFixed","_c","$RefreshReg$"],"sources":["/Users/tasneemmahmud/Desktop/tristan-style/src/components/Cart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport '../styles/Cart.css';\n\nfunction Cart() {\n  const [cartItems, setCartItems] = useState(() => {\n    // Retrieve cart items from localStorage if available\n    const savedCart = localStorage.getItem('cart');\n    return savedCart ? JSON.parse(savedCart) : [];\n  });\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const newItem = location.state?.item;\n    if (newItem) {\n      setCartItems((prevItems) => {\n        // Check if the item already exists in the cart\n        const isItemAlreadyInCart = prevItems.some(\n          (item) => item.name === newItem.name && item.price === newItem.price\n        );\n        if (!isItemAlreadyInCart) {\n          const updatedCart = [...prevItems, newItem];\n          // Save the updated cart to localStorage\n          localStorage.setItem('cart', JSON.stringify(updatedCart));\n          return updatedCart;\n        }\n        return prevItems;\n      });\n    }\n  }, [location.state]);\n\n  const removeItemFromCart = (index) => {\n    setCartItems((prevItems) => {\n      const updatedCart = prevItems.filter((_, i) => i !== index);\n      // Update localStorage with the new cart state\n      localStorage.setItem('cart', JSON.stringify(updatedCart));\n      return updatedCart;\n    });\n  };\n\n  // Ensure that price is a number and calculate the total price\n  const totalPrice = cartItems.reduce((total, item) => {\n    // Ensure the price is a number, default to 0 if invalid\n    const p = parseFloat(item.price);\n    console.log(p)\n    if (!isNaN(price)) {\n      return total + price; // Add the price to the total if valid\n    }\n    return total; // If invalid, skip the item\n  }, 0);\n\n  console.log(\"Cart Items:\", cartItems);  // Debugging cart items\n  console.log(\"Total Price:\", totalPrice);  // Debugging total price\n\n  return (\n    <div className=\"cart\">\n      <h2>Shopping Cart</h2>\n      <ul>\n        {cartItems.length > 0 ? (\n          cartItems.map((item, index) => (\n            <li key={index}>\n              {item.name} - {item.price}\n              <button onClick={() => removeItemFromCart(index)}>Remove</button>\n            </li>\n          ))\n        ) : (\n          <p>Your cart is empty!</p>\n        )}\n      </ul>\n      {cartItems.length > 0 && (\n        <div className=\"total\">\n          <h3>Total: ${totalPrice.toFixed(2)}</h3>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Cart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}